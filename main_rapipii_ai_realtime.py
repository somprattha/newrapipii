import time
import json
import pygame
import asyncio
from core.vts_controller import VTubeStudioConnector
from fan_manager import fan_memory_manager

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö VTube Studio
vts = VTubeStudioConnector()

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á Persona
CONFIG_PATH = "config/persona_config.json"

def load_config():
    try:
        with open(CONFIG_PATH, "r", encoding="utf-8") as f:
            return json.load(f)
    except:
        return {"mode": "talkative", "last_auto_speak_time": 0}

def save_config(cfg):
    with open(CONFIG_PATH, "w", encoding="utf-8") as f:
        json.dump(cfg, f, indent=2, ensure_ascii=False)

def should_talk(interval_sec=120):
    cfg = load_config()
    now = time.time()
    if now - cfg["last_auto_speak_time"] >= interval_sec:
        cfg["last_auto_speak_time"] = now
        save_config(cfg)
        return True
    return False

def set_mode(new_mode):
    cfg = load_config()
    cfg["mode"] = new_mode
    save_config(cfg)
    print(f"[üß†] ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏´‡∏°‡∏î‡∏û‡∏π‡∏î: {new_mode}")

def get_mode():
    return load_config().get("mode", "talkative")

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
async def main():
    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô fan_memory_manager
    fan_memory_manager()
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î
    if should_talk():
        print("‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà AI ‡∏à‡∏∞‡∏û‡∏π‡∏î!")
        set_mode("talkative")
        # ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏û‡∏π‡∏î‡∏´‡∏£‡∏∑‡∏≠‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ VTube Studio ‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà

# ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å
if __name__ == "__main__":
    asyncio.run(main())
